// <auto-generated />
using System;
using CarServiceSchedule.Model;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CarServiceSchedule.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.8")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CarServiceSchedule.Model.Booking", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CarId")
                        .HasColumnType("int");

                    b.Property<int?>("DemandId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CarId");

                    b.HasIndex("DemandId");

                    b.ToTable("Bookings");
                });

            modelBuilder.Entity("CarServiceSchedule.Model.Car", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CarFeatureId")
                        .HasColumnType("int");

                    b.Property<int>("CarStatus")
                        .HasColumnType("int");

                    b.Property<int>("CurrentLocation")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CarFeatureId");

                    b.ToTable("Cars");
                });

            modelBuilder.Entity("CarServiceSchedule.Model.CarFeature", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Engine")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("InfotainmentSystem")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("InteriorDesign")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Model")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("Model", "Engine", "InfotainmentSystem", "InteriorDesign")
                        .IsUnique()
                        .HasFilter("[Model] IS NOT NULL AND [Engine] IS NOT NULL AND [InfotainmentSystem] IS NOT NULL AND [InteriorDesign] IS NOT NULL");

                    b.ToTable("CarFeatures");
                });

            modelBuilder.Entity("CarServiceSchedule.Model.Demand", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CarFeatureId")
                        .HasColumnType("int");

                    b.Property<int>("DemandStatus")
                        .HasColumnType("int");

                    b.Property<int>("DropOffLocation")
                        .HasColumnType("int");

                    b.Property<DateTime>("DropOffTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("PickUpLocation")
                        .HasColumnType("int");

                    b.Property<DateTime>("PickUpTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CarFeatureId");

                    b.HasIndex("UserId");

                    b.ToTable("Demands");
                });

            modelBuilder.Entity("CarServiceSchedule.Model.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("CarServiceSchedule.Model.Booking", b =>
                {
                    b.HasOne("CarServiceSchedule.Model.Car", "Car")
                        .WithMany()
                        .HasForeignKey("CarId");

                    b.HasOne("CarServiceSchedule.Model.Demand", "Demand")
                        .WithMany()
                        .HasForeignKey("DemandId");

                    b.Navigation("Car");

                    b.Navigation("Demand");
                });

            modelBuilder.Entity("CarServiceSchedule.Model.Car", b =>
                {
                    b.HasOne("CarServiceSchedule.Model.CarFeature", "CarFeature")
                        .WithMany()
                        .HasForeignKey("CarFeatureId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CarFeature");
                });

            modelBuilder.Entity("CarServiceSchedule.Model.Demand", b =>
                {
                    b.HasOne("CarServiceSchedule.Model.CarFeature", "CarFeature")
                        .WithMany()
                        .HasForeignKey("CarFeatureId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CarServiceSchedule.Model.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("CarFeature");

                    b.Navigation("User");
                });
#pragma warning restore 612, 618
        }
    }
}
